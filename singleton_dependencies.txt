# *m = num methods, *p = num proxied calls

# loadSchemas has most of the Schema, SystemKeyspace & DefsTables references, SystemKeyspace is also referenced in isReplacing
# move loadSchemas to Schema or SystemKeyspace

DatabaseDescriptor [Schema(?, 3m), SystemKeyspace(?, 2m), DefsTables(?, 1m), KeyspaceManager]  #seems to be logical initialization point
    * move loadSchemas to SystemKeyspace
    * pass SystemKeyspace into isReplacing

Updated --> QueryProcessor []  # maintains prepared statements, but has no dependencies
Updated --> TriggerExecutor [QueryProcessor]

Updated --> SinkManager []
Updated --> StorageServiceTasks []
Updated --> StreamManager [DatabaseDescriptor]

Updated --> SystemKeyspace [DatabaseDescriptor, QueryProcessor(strong)]

Updated --> Schema [SystemKeyspace(?, 1m), MigrationManager(?, 1m)]

Updated --> CommitLog [DatabaseDescriptor, KeyspaceManager, Schema]
Updated --> CommitLogSegmentManager [DatabaseDescriptor, KeyspaceManager, Schema]
    * do something about the KeyspaceManager dependency

StageManager [DatabaseDescriptor, MessagingService(weak, 1m, parameterize)]

MessagingService [StorageServiceTasks, StageManager(stronger, 2m), StorageProxy(weak, 1m), DatabaseDescriptor, SinkManager, Tracing]
    * work out how to decouple the MessagingService and StageManager constructors
        * could push incrementDroppedMessages from MessagingService to DatabaseDescriptor, but that's kinda messy
        * could special case tracingexecutor to live in an atomic reference outside the enum map and expose a setter
        * could push getStage up to DatabaseDescriptor, also ugly
        * could use a wrapper class for the timeoutReporter, which references a volatile member

?? move cluster state here?

Updated --> Gossiper [MessagingService, DatabaseDescriptor, StageManager]

Updated --> LoadBroadcaster [Gossiper]

Updated --> FailureDetector [Gossiper(strong), DatabaseDescriptor]

Updated --> DefsTables [SystemKeyspace, Schema, MigrationManager(med), CompactionManager(weak, 2), CommitLog(weak, 1), KeyspaceManager]

Updated --> ClusterState [DatabaseDescriptor, Schema, KeyspaceManager, FailureDetector, CommitLog, StorageServiceTasks, DatabaseDescriptor]

Updated --> MigrationManager [Schema(strong), Gossiper, StorageServiceTasks, StageManager, SystemKeyspace, DefsTables(strong), MessagingService, StorageService]

Updated --> ActiveRepairService [Gossiper, FailureDetector, MessagingService]
Updated --> CompactionManager [Schema, ActiveRepairService, SystemKeyspace]

HintedHandOffManager [DatabaseDescriptor, Schema, StorageServiceTasks,  KeyspaceManager,
                      CompactionManager(weak, 1), Gossiper, FailureDetector, SystemKeyspace, MessagingService, ClusterState]
    * DI CompactionManager into compact method

Updated --> StorageProxy [StageManager, Schema(3m), DatabaseDescriptor, TriggerExecutor(2m, 1p), MessagingService, HintedHandOffManager,
              FailureDetector(2m), SinkManager(2m), Gossiper(4m), ClusterState]

Updated --> Tracing [StageManager, StorageProxy]

Updated --> ColumnFamilyStoreManager [Schema, ClusterState, SystemKeyspace, CompactionManager, CacheService]
Updated --> ColumnFamilyStore [ClusterState, SystemKeyspace, CompactionManager, CacheService, ColumnFamilyStoreManager.TaskExecutors]
    * move tracing back into constructor

*Updated --> KeyspaceManager [Schema, ClusterState, CommitLog, ColumnFamilyStoreManager]
Updated --> Keyspace [Schema, ClusterState, CommitLog(weak, single method), ColumnFamilyStoreManager]
    * move static initialization methods into static factory


Updated --> Auth [QueryProcessor, DatabaseDescriptor, MigrationManager, ClusterState, Schema]

BatchlogManager [QueryProcessor, DatabaseDescriptor, ClusterState, KeyspaceManager, SystemKeyspace, StorageProxy, FailureDetector, 
                 MessagingService, CompactionManager]


StorageService [SystemKeyspace, Gossiper(strong), StreamManager(weak, move to create method), MessagingService(strong),
                StageManager, DatabaseDescriptor, MessagingService, MigrationManager(3-4m), StorageServiceTasks(2, init/drain),
                StorageProxy(3m), CommitLog(2, init/drain), Schema, LoadBroadcaster(3m), HintedHandOffManager(3m, 1p),
                BatchlogManager(2m), PendingRangeCalculatorService, Auth(weak, 2m, init/start),
                FailureDetector(5m), ActiveRepairService(very strong), ColumnFamilyStoreManager(create), KeyspaceManager]
    * DI StorageProxy into methods
    * resolve dependency on KeyspaceManager
    * split out getValidColumnFamilies, forceKeyspaceFlush


Updated --> ColumnFamilyStore [ClusterState, SystemKeyspace, CompactionManager, CacheService, Tracing]

RepairMessageVerbHandler [CompactionManager, Schema, KeyspaceManager, ActiveRepairService, MessagingService, StorageService]
    # instantiated by StorageService

KSMetaData [ClusterState, DatabaseDescriptor, SystemKeyspace, QueryProcessor]
CFMetaData [QueryProcessor, Schema, SystemKeyspace, ColumnFamilyStoreManager, KeyspaceManager]


Updated --> CacheService [DatabaseDescriptor, StageManager, Schema]
Updated --> ColumnFamilyStoreManager [Schema, StorageService, SystemKeyspace, CompactionManager, CacheService]
Updated --> ColumnFamilyStore [CacheService, SystemKeyspace, CompactionManager(strong), StorageService(weaker, 2)]

StatusLogger [DatabaseDescriptor, ColumnFamilyStoreManager]

Updated --> PendingRangeCalculatorService [Schema, ClusterState]


